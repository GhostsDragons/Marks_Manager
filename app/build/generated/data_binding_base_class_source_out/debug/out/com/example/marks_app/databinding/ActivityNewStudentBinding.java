// Generated by view binder compiler. Do not edit!
package com.example.marks_app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.marks_app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNewStudentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView Mak;

  @NonNull
  public final EditText Marks;

  @NonNull
  public final TextView NM;

  @NonNull
  public final EditText Name;

  @NonNull
  public final Button Save1;

  @NonNull
  public final Spinner examselect;

  private ActivityNewStudentBinding(@NonNull ConstraintLayout rootView, @NonNull TextView Mak,
      @NonNull EditText Marks, @NonNull TextView NM, @NonNull EditText Name, @NonNull Button Save1,
      @NonNull Spinner examselect) {
    this.rootView = rootView;
    this.Mak = Mak;
    this.Marks = Marks;
    this.NM = NM;
    this.Name = Name;
    this.Save1 = Save1;
    this.examselect = examselect;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNewStudentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNewStudentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_new_student, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNewStudentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Mak;
      TextView Mak = ViewBindings.findChildViewById(rootView, id);
      if (Mak == null) {
        break missingId;
      }

      id = R.id.Marks;
      EditText Marks = ViewBindings.findChildViewById(rootView, id);
      if (Marks == null) {
        break missingId;
      }

      id = R.id.NM;
      TextView NM = ViewBindings.findChildViewById(rootView, id);
      if (NM == null) {
        break missingId;
      }

      id = R.id.Name;
      EditText Name = ViewBindings.findChildViewById(rootView, id);
      if (Name == null) {
        break missingId;
      }

      id = R.id.Save1;
      Button Save1 = ViewBindings.findChildViewById(rootView, id);
      if (Save1 == null) {
        break missingId;
      }

      id = R.id.examselect;
      Spinner examselect = ViewBindings.findChildViewById(rootView, id);
      if (examselect == null) {
        break missingId;
      }

      return new ActivityNewStudentBinding((ConstraintLayout) rootView, Mak, Marks, NM, Name, Save1,
          examselect);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
