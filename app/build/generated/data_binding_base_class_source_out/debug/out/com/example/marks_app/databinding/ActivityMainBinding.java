// Generated by view binder compiler. Do not edit!
package com.example.marks_app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.marks_app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnLogIn;

  @NonNull
  public final Button forgetpass;

  @NonNull
  public final EditText loginEmail;

  @NonNull
  public final EditText loginpaswd;

  @NonNull
  public final Spinner positionselector;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnLogIn,
      @NonNull Button forgetpass, @NonNull EditText loginEmail, @NonNull EditText loginpaswd,
      @NonNull Spinner positionselector) {
    this.rootView = rootView;
    this.btnLogIn = btnLogIn;
    this.forgetpass = forgetpass;
    this.loginEmail = loginEmail;
    this.loginpaswd = loginpaswd;
    this.positionselector = positionselector;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnLogIn;
      Button btnLogIn = ViewBindings.findChildViewById(rootView, id);
      if (btnLogIn == null) {
        break missingId;
      }

      id = R.id.forgetpass;
      Button forgetpass = ViewBindings.findChildViewById(rootView, id);
      if (forgetpass == null) {
        break missingId;
      }

      id = R.id.loginEmail;
      EditText loginEmail = ViewBindings.findChildViewById(rootView, id);
      if (loginEmail == null) {
        break missingId;
      }

      id = R.id.loginpaswd;
      EditText loginpaswd = ViewBindings.findChildViewById(rootView, id);
      if (loginpaswd == null) {
        break missingId;
      }

      id = R.id.positionselector;
      Spinner positionselector = ViewBindings.findChildViewById(rootView, id);
      if (positionselector == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, btnLogIn, forgetpass, loginEmail,
          loginpaswd, positionselector);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
